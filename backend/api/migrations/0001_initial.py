# Generated by Django 5.2.1 on 2025-05-26 18:39

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('genre_id', models.AutoField(primary_key=True, serialize=False)),
                ('genre_name', models.TextField(unique=True)),
            ],
            options={
                'db_table': 'Genres',
                'ordering': ['genre_id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.TextField()),
                ('last_name', models.TextField()),
                ('username', models.TextField(unique=True)),
                ('hashed_password', models.TextField()),
                ('email', models.TextField(unique=True)),
                ('sstate', models.TextField(default='active')),
            ],
            options={
                'db_table': 'Users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('actor_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.TextField()),
                ('last_name', models.TextField()),
            ],
            options={
                'db_table': 'Actors',
                'ordering': ['actor_id'],
                'managed': True,
                'unique_together': {('first_name', 'last_name')},
            },
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('director_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.TextField()),
                ('last_name', models.TextField()),
            ],
            options={
                'db_table': 'Directors',
                'ordering': ['director_id'],
                'managed': True,
                'unique_together': {('first_name', 'last_name')},
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('movie_id', models.AutoField(primary_key=True, serialize=False)),
                ('movie_name', models.TextField()),
                ('release_year', models.IntegerField()),
                ('age_rating', models.TextField()),
                ('runtime', models.IntegerField()),
                ('combined_rating', models.FloatField()),
                ('poster', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Movies',
                'ordering': ['movie_id'],
                'managed': True,
                'unique_together': {('movie_name', 'release_year', 'runtime')},
            },
        ),
        migrations.CreateModel(
            name='MovieActor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('actor', models.ForeignKey(db_column='actor_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='movies', to='movieapi.actor')),
                ('movie', models.ForeignKey(db_column='movie_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='actors', to='movieapi.movie')),
            ],
            options={
                'db_table': 'Movie_Actors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('comment_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent_comment', models.ForeignKey(blank=True, db_column='parent_comment_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='movieapi.comment')),
                ('movie', models.ForeignKey(db_column='movie_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='movieapi.movie')),
                ('user', models.ForeignKey(db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='movieapi.user')),
            ],
            options={
                'db_table': 'Comments',
                'ordering': ['comment_id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Writer',
            fields=[
                ('writer_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.TextField()),
                ('last_name', models.TextField()),
            ],
            options={
                'db_table': 'Writers',
                'ordering': ['writer_id'],
                'managed': True,
                'unique_together': {('first_name', 'last_name')},
            },
        ),
        migrations.CreateModel(
            name='MovieDirector',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('director', models.ForeignKey(db_column='director_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='movies', to='movieapi.director')),
                ('movie', models.ForeignKey(db_column='movie_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='directors', to='movieapi.movie')),
            ],
            options={
                'db_table': 'Movie_Directors',
                'managed': True,
                'unique_together': {('movie', 'director')},
            },
        ),
        migrations.CreateModel(
            name='MovieGenre',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('genre', models.ForeignKey(db_column='genre_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='movies', to='movieapi.genre')),
                ('movie', models.ForeignKey(db_column='movie_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='genres', to='movieapi.movie')),
            ],
            options={
                'db_table': 'Movie_Genres',
                'managed': True,
                'unique_together': {('movie', 'genre')},
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('rating_id', models.AutoField(primary_key=True, serialize=False)),
                ('rating_value', models.FloatField()),
                ('review_text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(db_column='movie_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='movieapi.movie')),
                ('user', models.ForeignKey(db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='movieapi.user')),
            ],
            options={
                'db_table': 'Ratings',
                'ordering': ['rating_id'],
                'managed': True,
                'unique_together': {('movie', 'user')},
            },
        ),
        migrations.CreateModel(
            name='MovieWriter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('movie', models.ForeignKey(db_column='movie_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='writers', to='movieapi.movie')),
                ('writer', models.ForeignKey(db_column='writer_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='movies', to='movieapi.writer')),
            ],
            options={
                'db_table': 'Movie_Writers',
                'managed': True,
                'unique_together': {('movie', 'writer')},
            },
        ),
    ]
